---
- name: include variables
  include_role:
    name: lihas_variables
  when: configspaces is not defined
- name: reset_apt_update
  set_fact:
    apt_update: False
- name: "Set default locale to {{ locales_default_environment_locale | default('de_DE.UTF-8') }}"
  lineinfile:
    dest: "/etc/default/locale"
    regexp: "^LANG="
    line: "LANG={{ locales_default_environment_locale | default('de_DE.UTF-8') }}"
  notify: reconfigure locales
- name: "Set to generate locales {{ locales_locales_to_be_generated | default(['de_DE.UTF-8', 'en_US.UTF-8']) }}"
  lineinfile:
    mode: 0644
    path: /etc/locale.gen
    line: '{{ item }} \2'
    regexp: "^(# |){{ item }} (.*)"
    backrefs: True
    state: present
  loop: "{{ locales_locales_to_be_generated | default(['de_DE.UTF-8', 'en_US.UTF-8']) }}"
  notify: reconfigure locales
- name: "Set tzdata area to {{ tzdata_areas | default('Europe') }}"
  debconf:
    name: tzdata
    question: "tzdata/Areas"
    vtype: select
    value: "{{ tzdata_areas | default('Europe') }}"
  notify: reconfigure tzdata
- name: "Set tzdata zone to {{ tzdata_zones_europe | default('Berlin') }}"
  debconf:
    name: tzdata
    question: "tzdata/Zones/Europe"
    vtype: select
    value: "{{ tzdata_zones_europe | default('Berlin') }}"
  notify: reconfigure tzdata
- name: deploy /etc/network/interfaces
  template:
    src: etc/network/interfaces.j2
    dest: /etc/network/interfaces
    mode: 0644
  when: hostvars[inventory_hostname].network.interfaces is defined
  register: result
- name: protect /etc/network/interfaces on Proxmox/LXC
  copy:
    dest: /etc/network/.pve-ignore.interfaces
    src: /dev/null
    mode: 0644
  when: ansible_virtualization_type == 'lxc' and hostvars[inventory_hostname].network.interfaces is defined
# /etc/hosts
- name: add lines to /etc/hosts
  include: tasks/10-etc_hosts.yml
  loop: "{{ configspaces }}"
  loop_control:
    loop_var: configgroup
- name: remove 127.0.1.1 from /etc/hosts
  lineinfile:
    path: /etc/hosts
    state: absent
    regexp: '^127\.0\.1\.1'
# repositories
- name: enable buster-backports
  template:
    src: etc/apt/sources.list.d/buster-backports.list
    dest: /etc/apt/sources.list.d/buster-backports.list
    mode: 0644
  register: result
- name: set_apt_update
  set_fact:
    apt_update: True
  when: result.changed
- name: create /etc/apt/preferences.d
  file:
    state: directory
    path: /etc/apt/preferences.d
    mode: 0755
- name: if wireguard is used, use from backports
  copy:
    src: etc/apt/preferences.d/wireguard.pref
    dest: /etc/apt/preferences.d/wireguard.pref
    mode: 0644
  register: result
- name: set_apt_update
  set_fact:
    apt_update: True
  when: result.changed
- name: apt update
  apt:
    update_cache: True
  when: apt_update
- name: reset_apt_update
  set_fact:
    apt_update: False
  when: apt_update
- name: install software
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - extrepo
    - rsync
    - screen
    - etckeeper
  loop_control:
    loop_var: item
- name: extrepo enable lihas
  command:
    cmd: /usr/bin/extrepo enable lihas
  changed_when: False
  register: result
- name: set_apt_update
  set_fact:
    apt_update: True
  when: '"repository already existed" not in result.stdout'
- name: apt update
  apt:
    update_cache: True
  when: apt_update
- name: reset_apt_update
  set_fact:
    apt_update: False
  when: apt_update
- name: Update apt cache
  apt:
    update_cache: True
    cache_valid_time: 600
- name: disable systemd-modules-load.service on lxc
  systemd:
    name: systemd-modules-load.service
    masked: true
  when: ansible_virtualization_type == 'lxc'
- name: disable systemd-journald-audit.socket on lxc
  systemd:
    name: systemd-journald-audit.socket
    masked: true
  when: ansible_virtualization_type == 'lxc'
- name: disable sys-kernel-config.mount on lxc
  systemd:
    name: sys-kernel-config.mount
    masked: true
  when: ansible_virtualization_type == 'lxc'
- name: disable sys-kernel-debug.mount on lxc
  systemd:
    name: sys-kernel-debug.mount
    masked: true
  when: ansible_virtualization_type == 'lxc'
- name: mark role lihas_common done
  set_fact:
    role_done_lihas_common: true
  when: role_done_lihas_common is not defined

# - debug:
#     var: hostvars
