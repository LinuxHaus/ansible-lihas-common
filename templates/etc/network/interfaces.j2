auto lo
iface lo inet loopback

{% if hostvars[inventory_hostname] is defined %}
{%   for i in hostvars[inventory_hostname].network.interfaces | default({}) | dict2items %}
auto {{ i.key }}
iface {{ i.key }} inet {{ i.value.config_type }}
{%     if i.value.address is defined %}
  address {{ i.value.address }}
{%     endif %}
{%     if i.value.gateway is defined %}
  gateway {{ i.value.gateway }}
{%     endif %}
{%     if i.value.metric is defined %}
  metric {{ i.value.metric }}
{%     endif %}
{%     if i.value['dns-nameserver'] is defined %}
  dns-nameserver {{ i.value['dns-nameserver'] }}
{%     endif %}
{%     if i.value.preup is defined %}
{%       for cmd in i.value.preup | default([]) %}
  pre-up {{ cmd }}
{%       endfor %}
{%     endif %}
{%     if i.value.up is defined %}
{%       for cmd in i.value.up | default([]) %}
  up {{ cmd }}
{%       endfor %}
{%     endif %}
{%     if i.value.down is defined %}
{%       for cmd in i.value.down | default([]) %}
  down {{ cmd }}
{%       endfor %}
{%     endif %}
{%     if i.value.postdown is defined %}
{%       for cmd in i.value.postdown | default([]) %}
  post-down {{ cmd }}
{%       endfor %}
{%     endif %}
{%     if hostvars[inventory_hostname].network.bridges[i.key] is defined %}
{%       if hostvars[inventory_hostname].network.bridges[i.key].bridge_type == "linux" %}
{%         if hostvars[inventory_hostname].network.bridges[i.key].slaves is defined %}
  bridge_ports{% for port in hostvars[inventory_hostname].network.bridges[i.key].slaves %} {{ port }}{%           endfor%}

{%         else %}
  bridge_ports none
{%         endif %}
  bridge_maxwait 0
  bridge_stp     off
  bridge_fd      0
  bridge_vlan_aware yes
{%       endif %}
{%     endif %}
{%     if hostvars[inventory_hostname].network.vlans[i.key] is defined %}
  vlan-raw-device {{ hostvars[inventory_hostname].network.vlans[i.key].rawdevice }}
{%     endif %}

{%   endfor %}
{% endif %}

{% for config in configspaces | default([]) %}
{%   for i in hostvars[inventory_hostname][config]['config']['network']['interfaces'] | default({}) | dict2items %}
auto {{ i.key }}
iface {{ i.key }} inet {{ i.value.config_type }}
{%     if i.value.address is defined %}
  address {{ i.value.address }}
{%     endif %}
{%     if i.value.gateway is defined %}
  gateway {{ i.value.gateway }}
{%     endif %}
{%     if i.value.metric is defined %}
  metric {{ i.value.metric }}
{%     endif %}
{%     if i.value.preup is defined %}
{%       for cmd in i.value.preup | default([]) %}
  pre-up {{ cmd }}
{%       endfor %}
{%     endif %}
{%     if i.value.up is defined %}
{%       for cmd in i.value.up | default([]) %}
  up {{ cmd }}
{%       endfor %}
{%     endif %}
{%     if i.value.down is defined %}
{%       for cmd in i.value.down | default([]) %}
  down {{ cmd }}
{%       endfor %}
{%     endif %}
{%     if i.value.postdown is defined %}
{%       for cmd in i.value.postdown | default([]) %}
  post-down {{ cmd }}
{%       endfor %}
{%     endif %}
{%     if hostvars[inventory_hostname][config]['config']['network']['bridges'][i.key] is defined %}
{%       if hostvars[inventory_hostname][config]['config']['network']['bridges'][i.key].bridge_type == "linux" %}
{%         if hostvars[inventory_hostname][config]['config']['network']['bridges'][i.key].slaves is defined %}
  bridge_ports{% for port in hostvars[inventory_hostname][config]['config']['network']['bridges'][i.key].slaves %} {{ port }}{%           endfor%}

{%         else %}
  bridge_ports none
{%         endif %}
  bridge_maxwait 0
  bridge_stp     off
  bridge_fd      0
  bridge_vlan_aware yes
{%       endif %}
{%     endif %}
{%     if hostvars[inventory_hostname][config]['config']['network']['vlans'][i.key] is defined %}
  vlan-raw-device {{ hostvars[inventory_hostname][config]['config']['network']['vlans'][i.key].rawdevice }}
  pre-up ip link add link {{ hostvars[inventory_hostname][config]['config']['network']['vlans'][i.key].rawdevice }} name {{ i.key }} type vlan id {{ hostvars[inventory_hostname][config]['config']['network']['vlans'][i.key].vlanid }}
{%     endif %}

{%   endfor %}
{% endfor %}

source /etc/network/interfaces-standortvernetzung
